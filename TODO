logging
 config file opt
 stream setting in config

plugintester
 set up logging to log to debug stream

fix builtin plugins:
 coverage
 doctest
 prof
 isolation * post merge
   not sure how this one can be made to work at the module level, since
   import and testrunning take place separately now -- mods a, b, c are all 
   imported before tests are run in a. probably best to have it work at the
   directory and context levels -- that will get pretty close to what it
   does in 0.9

new plugin:
 testid

rename Failure and split into subclasses for Import and other, and make
it optionally include the name of the file being considered so that
Failure test logs can be more informative


* plugin methods to add

before/after Context [in suite, call with parent]
makeTest
prepareTestCase
loadTestsFromName

when result prints final result, patch in error classes, eg,

FAILED (todo=10)
  or
OK (skipped=2)

** this can only be done in nose test runner

make setup work with & w/out setuptools

fix commands module -- use Config.configure to configure

fix collector func -- configure, return loader.loadTestsFromNames()


BUGS

--exclude doesn't seem to work? in some cases?



MERGE merge trunk -> 0.10 from r9 to pick up trunk changes/fixes

...

REMOVE the context class entirely? is it doing anything that 
suite and case.Test shouldn't more properly do?

tests for:

module-level setup skip: skip all
likewise deprecated
likewise error

plugins:

plugin manager class
replace call_plugins with proxied call through plugin manager
  how to handle diff cases where plugs may short circuit on first non-None
  response or where all non-None responses are taken?

result/result proxy:

SUITES also need to proxy their results

result takes config
implements beforeTest, afterTest
result proxy should be a plugin?
what plugin hook is needed for that?

supporting result proxy in context:

 call context.prepareTest() before each test? no
 need to have a hook for context (or test case) 
 to replace/wrap the result
